import telebot
from telebot import types
from openai import OpenAI

# üîë –í—Å—Ç–∞–≤—å —Å–≤–æ–∏ –∫–ª—é—á–∏
TELEGRAM_TOKEN = "8320967904:AAFvuopto8v0t4VnF29IN_yccWR81z_Dfbo"
OPENAI_API_KEY = "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"

bot = telebot.TeleBot(TELEGRAM_TOKEN)
client = OpenAI(api_key=OPENAI_API_KEY)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_modes = {}

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üí¨ –ß–∞—Ç —Å –ò–ò")
    btn2 = types.KeyboardButton("üí° –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–¥–µ–π")
    btn3 = types.KeyboardButton("‚úçÔ∏è –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã")
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! üëã –í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞:", reply_markup=markup)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ ---
@bot.message_handler(func=lambda message: message.text in ["üí¨ –ß–∞—Ç —Å –ò–ò", "üí° –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–¥–µ–π", "‚úçÔ∏è –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã"])
def set_mode(message):
    user_modes[message.chat.id] = message.text
    bot.send_message(message.chat.id, f"‚úÖ –†–µ–∂–∏–º '{message.text}' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –∑–∞–ø—Ä–æ—Å üëá")

# --- –û—Å–Ω–æ–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ---
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    mode = user_modes.get(message.chat.id, "üí¨ –ß–∞—Ç —Å –ò–ò")
    user_text = message.text

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –∑–∞–ø—Ä–æ—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
    if mode == "üí° –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–¥–µ–π":
        prompt = f"–ü—Ä–∏–¥—É–º–∞–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–¥–µ–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {user_text}"
    elif mode == "‚úçÔ∏è –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã":
        prompt = f"–ù–∞–ø–∏—à–∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ —Ç–µ–º–µ: {user_text}"
    else:
        prompt = user_text

    # –ó–∞–ø—Ä–æ—Å –∫ OpenAI
    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã —É–º–Ω—ã–π –∏ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫."},
                {"role": "user", "content": prompt}
            ]
        )
        reply = response.choices[0].message.content
        bot.send_message(message.chat.id, reply)
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
bot.polling(non_stop=True)